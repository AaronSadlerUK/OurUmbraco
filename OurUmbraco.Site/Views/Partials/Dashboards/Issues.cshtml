@using OurUmbraco.Our.Api
@inherits OurUmbraco.Our.Models.OurUmbracoTemplatePage
@{
    var controller = new DashboardStatisticsController();
    var repository = "";
    var startYear = 2018;
    var startMonth = 6;
    var startDate = new DateTime(startYear, startMonth, 1);
    var issueStatistics = controller.GetIssueStatistics(repository: repository, startYear: startYear, startMonth: startMonth, monthly: false);
}


<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Issue statistics (since @(startDate.ToString("MMMM yyyy")))</h6>
    </div>
    <div class="card-body">

        <div class="col-sm-12">
            <table class="table table-bordered dataTable" id="dataTable" width="100%" cellspacing="0" role="grid" aria-describedby="dataTable_info" style="width: 100%;">

                <thead>
                    <tr role="row">
                        @if (string.IsNullOrWhiteSpace(repository) == false)
                        {
                            <th>Repository</th>
                        }
                        <th>Period</th>
                        <th>CreatedIssues</th>
                        <th>ClosedIssues</th>
                        <th>CloseRatio</th>
                        <th>FirstComment (Median)</th>
                        <th>CloseTime (Median)</th>
                        <th>FirstCommentOnTime</th>
                        <th>FirstCommentLate</th>
                        <th>FirstCommentOnTime%</th>
                        <th>CommentMissing</th>
                        <th>ReleaseIssues</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var stat in issueStatistics)
                    {
                        <tr>
                            @if (string.IsNullOrWhiteSpace(repository) == false)
                            {
                                <td>@repository</td>
                            }
                            <td>@stat.Title</td>
                            <td>@stat.CreatedIssues</td>
                            <td>@stat.ClosedIssues</td>
                            <td>
                                @{
                                    var ratio = Math.Round((double)stat.ClosedIssues / ((double)stat.CreatedIssues / 100), 2);
                                }
                                @(ratio)%
                            </td>
                            <td>@stat.MedianHoursToFirstComment</td>
                            <td>@stat.MedianHoursToClose</td>
                            <td>@stat.FirstTeamCommentOnTime</td>
                            <td>@stat.FirstTeamCommentLate</td>
                            <td>
                                @{
                                    var onTimePercentage = Math.Round((double)stat.FirstTeamCommentOnTime / ((double)stat.CreatedIssues / 100), 2);
                                }
                                @(onTimePercentage)%
                            </td>
                            <td>@stat.TeamCommentMissing</td>
                            <td>@stat.ReleaseIssues</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
