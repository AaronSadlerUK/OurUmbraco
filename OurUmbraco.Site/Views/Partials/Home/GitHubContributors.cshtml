@model OurUmbraco.Community.GitHub.Models.GitHubContributorsModel

@if (Model.Contributors.Any())
{
    <div class="flex flex-wrap github-contributor-list forum-thread">
        @foreach (var contributor in Model.Contributors)
        {
            <div class="contributor">
                <a href="@contributor.AuthorUrl" target="_blank" title="@contributor.AuthorLogin">
                    <div class="avatar">
                        <img alt="@contributor.AuthorLogin" src="@GetAvatarUrl(contributor.AuthorAvatarUrl, 112)"
                             srcset="@GetAvatarUrl(contributor.AuthorAvatarUrl, 224) 2x,@GetAvatarUrl(contributor.AuthorAvatarUrl, 336) 3x" />
                        <span class="contrib-count" title="@(contributor.TotalCommits + " " + (contributor.TotalCommits == 1 ? "contribution" : "contributions"))">
                            @contributor.TotalCommits
                        </span>
                        <div class="counts">
                            <div>Additions<br />
                                <strong>@contributor.TotalAdditions</strong>
                            </div>
                            <div>Deletions<br />
                                <strong>@contributor.TotalDeletions</strong>
                            </div>
                        </div>
                    </div>
                </a>
            </div>
        }

        <div class="loadmore">
            <a class="button transparent" href="#" onclick="loadAllGitHubContributors(); return false;">Load more</a>
        </div>
    </div>
}

else
{
    <h2>Could not load recent GitHub contributors.</h2>
}

@functions
{
    private string GetAvatarUrl(string url, int size)
    {
        if (string.IsNullOrEmpty(url))
            return string.Empty;

        var host = url.TrimStart("http://").TrimStart("https://");
        return string.Format("/remote.axd?https://{0}?width={1}&upscale=true", host,  size);
    }
}