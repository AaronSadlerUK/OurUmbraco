@using ClientDependency.Core.Mvc
@{
    Html.RequiresJs("https://ajax.aspnetcdn.com/ajax/signalr/jquery.signalr-2.2.2.js");
    Html.RequiresJs("~/signalr/hubs");
}

@* Mustache JS template to render a chat message *@
<script type="text/template" id="gitter-chat-template">    
    <a class="forum-thread gitter-message" data-message-id="{{ model.id }}">
        <div class="avatar">
            <img src="{{ model.fromUser.avatarUrlMedium }}" alt="{{ model.fromUser.displayName }}" />
            <p>
                {{ model.fromUser.displayName }}<br />
                @@{{ model.fromUser.username }}
            </p>
        </div>

        <div class="meta">
            <div class="forum-thread-text">
                {{{ model.html }}}
            </div>
        </div>
    </a>
</script>

<style>
    pre code {
        overflow-x: auto;
        display: block;
        padding: .5em;
        background: #23241f;
        line-height: 1.4em;
        word-wrap: normal
    }

    pre .tag, pre code {
        color: #f8f8f2
    }

    pre .hljs, pre .tag, pre .css .rule, pre .css .value, pre .aspectj .function, pre .css .function .preprocessor, pre .pragma {
        color: #f8f8f2
    }

    pre .strongemphasis, pre .strong, pre .emphasis {
        color: #a8a8a2
    }

    pre .bullet, pre .blockquote, pre .horizontal_rule, pre .number, pre .regexp, pre .alias .keyword, pre .literal, pre .hexcolor {
        color: #ae81ff
    }

    pre .tag .value, pre .code, pre .title, pre .css .class, pre .class .title:last-child {
        color: #a6e22e
    }

    pre .link_url {
        font-size: 80%
    }

    pre .strong, pre .strongemphasis {
        font-weight: 700
    }

    pre .emphasis, pre .strongemphasis, pre .class .title:last-child, pre .typename {
        font-style: italic
    }

    pre .keyword, pre .ruby .class .keyword:first-child, pre .ruby .function .keyword, pre .function, pre .change, pre .winutils, pre .flow, pre .nginx .title, pre .tex .special, pre .header, pre .attribute, pre .symbol, pre .symbol .string, pre .tag .title, pre .value, pre .alias .keyword:first-child, pre .css .tag, pre .css .unit, pre .css .important {
        color: #f92672
    }

        pre .function .keyword, pre .class .keyword:first-child, pre .aspect .keyword:first-child, pre .constant, pre .typename, pre .name, pre .css .attribute {
            color: #66d9ef
        }

    pre .variable, pre .params, pre .class .title, pre .aspect .title {
        color: #f8f8f2
    }

    pre .string, pre .css .id, pre .subst, pre .type, pre .ruby .class .parent, pre .built_in, pre .django .template_tag, pre .django .variable, pre .smalltalk .class, pre .django .filter .argument, pre .smalltalk .localvars, pre .smalltalk .array, pre .attr_selector, pre .pseudo, pre .addition, pre .stream, pre .envvar, pre .apache .tag, pre .apache .cbracket, pre .tex .command, pre .prompt, pre .link_label, pre .link_url {
        color: #e6db74
    }

    pre .comment, pre .annotation, pre .decorator, pre .pi, pre .doctype, pre .deletion, pre .shebang, pre .apache .sqbracket, pre .tex .formula {
        color: #75715e
    }
</style>

<script>
    $(function () {
        // Reference the auto-generated proxy for the hub.  
        var gitter = $.connection.gitterHub;
        
        //Currently unused - but ready to work
        gitter.client.prescenceEvent = function(data) {
            console.log('User Presence', data);
        };

        //Currently unused - but ready to work
        gitter.client.roomEvent = function(data) {
            console.log('Room event', data);
        };

        //Currently unused - but ready to work
        gitter.client.userEvent = function(data) {
            console.log('User event', data);
        };

        gitter.client.chatMessage = function(data) {
            console.log('Chat message', data);

            //If the payload is 'remove' then user has deleted message
            if (data.operation === 'remove') {
                //Check if the current message being displayed in the DOM
                //Matches the ID of this item we want to remove
                if (checkMessageIsInDom(data.model.id)) {
                    //If so then remove from DOM
                    $('#gitter').html('<strong>MESSAGE REMOVED</strong>');

                    //Then we would need to do an API call to get the last message to replace it
                }
            }

            //Operation is 'create' so just update the DOM instantly
            if (data.operation === 'create') {
                $('#gitter').html(renderMustacheTemplate(data));
            }

            //Operation is 'update' - need to check if its the current message being displayed
            if (data.operation === 'update') {
                if (checkMessageIsInDom(data.model.id)) {
                    //If so then update the DOM
                    $('#gitter').html(renderMustacheTemplate(data));
                }
            }
            
            //data.model.html
            //data.model.id
            //data.model.fromUser.displayName
            //data.model.fromUser.username
            //data.model.fromUser.avatarUrlMedium
            //data.model.fromUser.avatarUrlSmall
            //data.model.sent
            //data.model.editedAt
            
        };

        $.connection.hub.logging = true;

        $.connection.hub.start().done(function() {
            console.log('SignalR has connected');
        });

        function checkMessageIsInDom(messageId) {
            var currentMessageId = $('.gitter-message').attr('');
            return currentMessageId === messageId;
        }

        function renderMustacheTemplate(data) {
            //Render mustache js template with JSON data
            var template = $('#gitter-chat-template').html();
            return Mustache.render(template, data);
        }
    });

</script>

<script type="text/javascript">

    function loadAllGitHubContributors() {
        $('#github-contributors .github-contributor-list').addClass('all');
    }

    $(document).ready(function() {
        try {
            $("#twitter-search").load("@Url.Action("TwitterSearchResult", "TwitterSearch", new {numberOfResults = 6})");
        } catch (errTwitter) {
            console.log("Couldn't load Twitter feed", errTwitter.message);
        }

        try {
            $("#meetups").load("@Url.Action("GetEvents", "Meetups")");
        }
        catch (errTwitter) {
            console.log("Couldn't load meetups", errTwitter.message);
        }

        try {
            $("#forum-activity").load("@Url.Action("LatestActivity", "LatestActivity", new {numberOfTopics = 6})");
        } catch (errForum) {
            console.log("Couldn't load latest forum activity", errForum.message);
        }

        try {
            $("#github-contributors").load("@Url.Action("GitHubGetContributorsResult", "GitHubContributor")");
        }
        catch (errForum) {
            console.log("Couldn't load latest GitHub contributor activity", errForum.message);
        }
    });
</script> 
