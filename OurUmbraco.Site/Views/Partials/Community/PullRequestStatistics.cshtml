@using OurUmbraco.Community.Controllers
@inherits OurUmbraco.Our.Models.OurUmbracoTemplatePage

@{
    var stats = new PullRequestStatisticsController();
    var statistics = stats.GetGroupedPullRequestData(new DateTime(2010, 01, 01), new DateTime(2018, 12, 31));
}
<style>
    table, th, td, tr {
        border: 1px solid black;
        font-size: 6px;
    }
</style>

<p>Total number of unique outside contributors: @statistics.Last().TotalNumberOfContributors</p>

<table>
    <th>&nbsp;</th>
    @foreach (var prsInPeriod in statistics)
    {
        <th>@prsInPeriod.MonthYear</th>
    }
    <tr>
        <td>Number of PRs created</td>

        @foreach (var prsInPeriod in statistics)
        {
            <td>
                @prsInPeriod.NumberCreated
            </td>
        }
    </tr>
    <tr>
        <td>Number of PRs merged</td>
        @foreach (var prsInPeriod in statistics)
        {
            <td>
                @prsInPeriod.NumberMerged
            </td>
        }
    </tr>
    <tr>
        <td>Number of PRs closed without merging</td>
        @foreach (var prsInPeriod in statistics)
        {

            <td>
                @prsInPeriod.NumberClosed
            </td>
        }
    </tr>
    <tr>
        <td>Number PRs merged within first 30 days</td>
        @foreach (var prsInPeriod in statistics)
        {

            <td>
                @prsInPeriod.NumberMergedInThirtyDays
            </td>
        }
    </tr>
    <tr>
        <td>Number PRs not merged within first 30 days</td>
        @foreach (var prsInPeriod in statistics)
        {

            <td>
                @prsInPeriod.NumberNotMergedInThirtyDays
            </td>
        }
    </tr>
    <tr>
        <td>Total number of open PRs</td>
        @foreach (var prsInPeriod in statistics)
        {

            <td>
                @prsInPeriod.TotalNumberOpen
            </td>
        }
    </tr>
    <tr>
        <td>Number of new contributors</td>
        @foreach (var prsInPeriod in statistics)
        {

            <td>
                @prsInPeriod.NumberOfNewContributors
            </td>
        }
    </tr>
    <tr>
        <td>Number of active contributors in the past year</td>
        @foreach (var prsInPeriod in statistics)
        {

            <td>
                @prsInPeriod.NumberOfActiveContributorsInPastYear
            </td>
        }
    </tr>
    <tr>
        <td>Average number of hours to close PRs</td>
        @foreach (var prsInPeriod in statistics)
        {

            <td>
                @prsInPeriod.AveragePullRequestClosingTimeInHours
            </td>
        }
    </tr>
    @*<tr>
        <td>Average number of hours to close PRs</td>
        @foreach (var prsInPeriod in statistics)
        {

            <td>
                @{
                    var users = new List<string>();
                    foreach (var pr in prsInPeriod.Temp.OrderBy(x => x.CreatedAt))
                    {
                        if (users.Contains(pr.User.Login) == false)
                        {
                            users.Add(pr.User.Login);
                        }
                    }
                }
                @foreach(var user in users.OrderBy(x => x))
                {
                    <p>@user</p>
                    
                }
            </td>
        }
    </tr>*@

</table>